openapi: 3.0.0
info:
  title: Simple Smart Api
  description: Api for Smart at Home
  version: 1.0.0
servers:
- url: http://localhost:9001/api/v1
  description: Nuerk-Solutions
tags:
  - name: jobs
  - name: timer
  - name: pump
paths:
  /pump:
    get:
      tags:
        - pump
      summary: Update the Pump State
      operationId: state
      parameters:
        - name: state
          in: query
          description: Set wether the pump should be currently activeted or not.
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: The new state was succesfully set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pump'
        "400":
          description: Bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pump'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Pump
  /timer:
    get:
      tags:
        - timer
      summary: Retrieves all Timer
      operationId: getAllTimer
      responses:
        "200":
          description: Shows the Timer in a json string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timers'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Timer
    post:
      tags:
        - timer
      summary: Create a new Timer
      operationId: createTimer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Timer'
        required: true
      responses:
        "201":
          description: Timer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timer'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Timer
  /timer/{id}:
    get:
      tags:
        - timer
      summary: Get a Timer by an id
      operationId: getTimerById
      parameters:
        - name: id
          in: path
          description: A single Timer id
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        "200":
          description: Timer is obtained
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timer'
        "400":
          description: Invaild Timer Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Timer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Timer
    put:
      tags:
        - timer
      summary: Update a Timer by an id
      operationId: updateTimer
      parameters:
        - name: id
          in: path
          description: Represents the Id of Timer to be updated
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Timer'
        required: true
      responses:
        "200":
          description: Timer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timer'
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Timer
    delete:
      tags:
        - timer
      summary: Delete a Timer by an id
      operationId: deleteTimer
      parameters:
        - name: id
          in: path
          description: Deleting a Timer done
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        "200":
          description: Timer succesfully deleted
        "404":
          description: Timer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Timer
  /jobs:
    get:
      tags:
        - jobs
      summary: Retrieves all Jobs
      operationId: getAllJobs
      responses:
        "200":
          description: Shows the Jobs in a json string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jobs'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Jobs
    post:
      tags:
        - jobs
      summary: Create a new Job
      operationId: createJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        "201":
          description: Job created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Jobs
  /jobs/{id}:
    get:
      tags:
        - jobs
      summary: Get a Job by an id
      operationId: getJobById
      parameters:
        - name: id
          in: path
          description: A single job id
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        "200":
          description: Job is obtained
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        "400":
          description: Invaild Job Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Jobs
    put:
      tags:
        - jobs
      summary: Update a Job by an id
      operationId: updateJob
      parameters:
        - name: id
          in: path
          description: Represents the Id of Job to be updated
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        "200":
          description: Job updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Jobs
    delete:
      tags:
        - jobs
      summary: Delete a job by an id
      operationId: deleteJob
      parameters:
        - name: id
          in: path
          description: Deleting a done job
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        "200":
          description: Job succesfully deleted
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Jobs
  /jobs/{id}/{action}:
    patch:
      tags:
        - jobs
      summary: "Start, stop or pause a job"
      operationId: jobActionById
      parameters:
        - name: id
          in: path
          description: A single job id
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/Id'
        - name: action
          in: path
          description: Action type
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/JobAction'
      responses:
        "200":
          description: Job action executed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Jobs
components:
  schemas:
    Pump:
      required:
        - state
      type: object
      properties:
        POWER:
          type: string
          example: "ON"
      example:
        POWER: "ON"
    Id:
      type: string
      description: UUID
    Timer:
      required:
        - cron
        - duration
        - enabled
        - name
        - timestamp
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          description: Timer name
        cron:
          type: string
          description: The status of the todo
        duration:
          type: integer
          description: Length
        enabled:
          type: boolean
          description: The status of the todo
        timestamp:
          type: string
          description: The status of the todo
      example:
        name: TestJob
        cron: /2 * * * *
        duration: 10
        enabled: true
        timestamp: 2021as
    Timers:
      type: array
      items:
        $ref: '#/components/schemas/Timer'
    Job:
      required:
        - timeLeft
        - timeStarted
        - timerId
      type: object
      properties:
        jobId:
          $ref: '#/components/schemas/Id'
        timerId:
          $ref: '#/components/schemas/Id'
        status:
          $ref: '#/components/schemas/JobStatus'
        timeStarted:
          type: string
          description: DateTime Stared
        timeLeft:
          type: string
          description: Time left until end
      example:
        timerId: 012518380818asdasd
        status: waiting
        timeStarted: 2021-10-12
        timeLeft: 10m
    JobStatus:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - waiting
            - running
            - stopped
      example:
        status: abort
    JobAction:
      type: string
      properties:
        status:
          type: string
          enum:
            - start
            - stop
      example: start
    Jobs:
      type: array
      items:
        $ref: '#/components/schemas/Job'
    Error:
      required:
        - internal_code
        - message
      type: object
      properties:
        message:
          type: string
        internal_code:
          type: integer
